{"version":3,"sources":["Components/Header/index.js","Components/ShopButton/index.js","utils/API.js","Components/Table/index.js","Components/PetFilterButtons/index.js","Components/Footer/index.js","App.js","index.js"],"names":["Header","Box","border","borderColor","padding","Typography","variant","component","align","color","gutterBottom","ShopButton","id","name","markAsSold","Button","onClick","e","getSelectedPets","requestedStatus","a","axios","get","response","data","findPetToUpdate","petId","updatePetStatus","updatedPet","method","url","useStyles","makeStyles","table","margin","minWidth","maxWidth","typography","textAlign","Alert","props","elevation","BasicTable","petTable","classes","useState","open","setOpen","message","setMessage","petName","petToUpdate","console","log","status","handleClose","event","reason","petStatus","Table","className","TableHead","TableRow","TableCell","TableBody","pets","map","pet","i","src","alt","scope","length","category","TableContainer","Paper","Snackbar","autoHideDuration","onClose","severity","theme","root","spacing","ContainedButtons","handleSearch","footer","width","display","justifyContent","alignItems","bottom","links","marginRight","marginLeft","Footer","Link","href","target","rel","App","currentPets","setCurrentPets","selectedStatus","setSelectedStatus","limitedPets","setLimitedPets","useEffect","slicedPets","slice","selectedPets","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af0347f7.chunk.js","sourcesContent":["import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function Header() {\n    return (\n        <Box border={5} borderColor=\"primary.main\" padding={4}>\n            <Typography variant=\"h3\" component=\"h2\" align=\"center\" color=\"secondary\" gutterBottom>\n                Swagger Pet Store\n            </Typography>\n        </Box>\n    )\n}","import React from \"react\";\nimport ShopIcon from \"@material-ui/icons/Shop\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function ShopButton({id, name, markAsSold}) {\n    return (\n        <Button variant=\"outlined\" color=\"secondary\" onClick={(e)=> markAsSold(id, name)}><ShopIcon /></Button>\n    );\n}","import axios from 'axios';\n\nexport const getSelectedPets = async (requestedStatus) => {\n  const response = await axios.get(\n    `https://petstore.swagger.io/v2/pet/findByStatus?status=${requestedStatus}`\n  );\n  return response.data;\n};\n\nexport const findPetToUpdate = async (petId) => {\n  const response = await axios.get(`https://petstore.swagger.io/v2/pet/${petId}`);\n  return response.data;\n}\n\nexport const updatePetStatus = async (updatedPet) => {\n  const response = await axios({\n    method: \"PUT\",\n    url: `https://petstore.swagger.io/v2/pet`,\n    data: updatedPet\n  });\n\n  return response.data;\n};\n\n\n","import React, { useState } from \"react\";\n//material ui styles and components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Typography from '@material-ui/core/Typography';\n//custom components\nimport ShopButton from \"../ShopButton\";\n//api\nimport { updatePetStatus, findPetToUpdate } from \"../../utils/API\";\n\n\nconst useStyles = makeStyles({\n  table: {\n    margin: 'auto',\n    minWidth: 450,\n    maxWidth: 900\n  },\n  typography: {\n    textAlign: \"center\",\n    margin: 25\n  }\n});\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function BasicTable(props) {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n  const [message, setMessage] = useState(\"\")\n\n  //instantiating petTable to be assigned later based on selected status\n  let petTable;\n\n  const markAsSold = async (petId, petName) => {\n    try {\n      \n      //finding the pet by ID\n      const petToUpdate = await findPetToUpdate(petId);\n      console.log(petToUpdate)\n      //updating pets status to sold\n      petToUpdate.status = \"sold\";\n      //using a PUT request to update pet\n      const updatedPet = await updatePetStatus(petToUpdate);\n      console.log(updatedPet);\n      //setting message for alert & opening alert\n      setMessage(`${petName} has been sold!`);\n      setOpen(true);\n\n    } catch (error) {\n      console.log(error);\n    }\n    \n  };\n\n    const handleClose = (event, reason) => {\n      if (reason === \"clickaway\") {\n        return;\n      }\n\n      setOpen(false);\n    };\n\n  //displaying the table differently based on selected pet status\n  switch (props.petStatus) {\n    case \"available\":\n      petTable = (\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"right\">Photo</TableCell>\n              <TableCell>Pet Name</TableCell>\n              <TableCell>ID#</TableCell>\n              <TableCell align=\"right\">Status</TableCell>\n              <TableCell align=\"right\">Mark As Sold</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.pets.map((pet, i) => (\n              <TableRow key={i}>\n                <TableCell align=\"right\">\n                  <img\n                    src={`https://placedog.net/50/50?id=${i + 1}`}\n                    alt=\"placeholder dog\"\n                  />\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {pet.name}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\" data-id={pet.id}>\n                  {pet.id}\n                </TableCell>\n                <TableCell align=\"right\">{pet.status}</TableCell>\n                <TableCell align=\"right\">\n                  <ShopButton markAsSold={markAsSold} {...pet} />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      );\n      break;\n\n    case \"pending\":\n      //if no pets are pending, display a message instead of the table\n      props.pets.length === 0\n        ? (petTable = (\n            <Typography\n              className={classes.typography}\n              variant=\"h4\"\n              component=\"h2\"\n              gutterBottom\n            >\n              No pending pets at this time!\n            </Typography>\n          ))\n        : (petTable = (\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Photo</TableCell>\n                  <TableCell align=\"right\">Pet Name</TableCell>\n                  <TableCell align=\"right\">Status</TableCell>\n                  <TableCell align=\"right\">Category</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {props.pets.map((pet, i) => (\n                  <TableRow key={i}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      <img\n                        src={`https://placedog.net/50/50?id=${i + 1}`}\n                        alt=\"placeholder dog\"\n                      />\n                    </TableCell>\n                    <TableCell align=\"right\">{pet?.name}</TableCell>\n                    <TableCell align=\"right\">{pet?.status}</TableCell>\n                    <TableCell align=\"right\">{pet?.category?.name}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          ));\n      break;\n\n    case \"sold\":\n      petTable = (\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Photo</TableCell>\n              <TableCell align=\"right\">Pet Name</TableCell>\n              <TableCell align=\"right\">Status</TableCell>\n              <TableCell align=\"right\">Category</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.pets.map((pet, i) => (\n              <TableRow key={i}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <img\n                    src={`https://placedog.net/50/50?id=${i + 1}`}\n                    alt=\"placeholder dog\"\n                  />\n                </TableCell>\n                <TableCell align=\"right\">{pet?.name}</TableCell>\n\n                <TableCell align=\"right\">{pet?.status}</TableCell>\n                <TableCell align=\"right\">{pet?.category?.name}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      );\n      break;\n\n    default:\n      <></>;\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      {petTable}\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"success\">\n          {message}\n        </Alert>\n      </Snackbar>\n    </TableContainer>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    textAlign: \"center\"\n  },\n}));\n\nexport default function ContainedButtons(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => props.handleSearch(\"available\")}\n      >\n        Available\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => props.handleSearch(\"sold\")}\n      >\n        Sold\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => props.handleSearch(\"pending\")}\n      >\n        Pending\n      </Button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  footer: {\n    width: \"100%\",\n    display: \"flex\",\n    padding: 1,\n    justifyContent: \"flex-center\",\n    alignItems: \"center\",\n    bottom: 0,\n    margin: 10\n    },\n    typography: {\n        margin: \"auto\",\n    },\n    links: {\n        marginRight: 5,\n        marginLeft: 5\n    }\n});\n\nexport default function Footer() {\n    const classes = useStyles();\n\n  return (\n    <Box className={classes.footer}>\n      <Typography\n        variant=\"h6\"\n        component=\"h6\"\n        className={classes.typography}\n        gutterBottom\n      >\n        Created by\n        <Link\n          className={classes.links}\n          href=\"https://github.com/sammiefrog\"\n          target=\"_blank\"\n          rel=\"noopener\"\n        >\n          Sammantha Sasenick\n        </Link>\n        using\n        <Link\n          className={classes.links}\n          href=\"https://petstore.swagger.io/\"\n          target=\"_blank\"\n          rel=\"noopener\"\n        >\n          Swagger PetStore API\n        </Link>\n      </Typography>\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n//material ui components\nimport Container from \"@material-ui/core/Container\";\n//custom components\nimport Header from \"./Components/Header\";\nimport Table from \"./Components/Table\";\nimport PetFilterButtons from './Components/PetFilterButtons';\nimport Footer from './Components/Footer';\n//api\nimport {getSelectedPets} from \"./utils/API\";\n\nfunction App() {\n  //using state to manage current pets, limited pets(20 or less of current), and selected status\n  const [currentPets, setCurrentPets] = useState([]);\n  const [selectedStatus, setSelectedStatus] = useState(\"\");\n  const [limitedPets, setLimitedPets] = useState([]);\n\n  useEffect(() => {\n    //limiting number of pets displayed\n    if (currentPets !== []) {\n        const slicedPets = currentPets.slice(0, 20);\n        console.log(slicedPets);\n        setLimitedPets(slicedPets);\n    }\n  }, [currentPets]);\n\n  const handleSearch = async (status) => {\n    try {\n      //setting petStatus to the status of the button clicked\n      setSelectedStatus(status);\n      //status is being sent by the click event on each button\n      const selectedPets = await getSelectedPets(status);\n      setCurrentPets(selectedPets);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Container>\n        <PetFilterButtons handleSearch={handleSearch} />\n        <Table pets={limitedPets} petStatus={selectedStatus} />\n      </Container>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}